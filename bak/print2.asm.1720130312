true : ;nasm -I asmlib/ -l nasm.list -f bin -o print $0 && ls -l print && chmod +x print && objdump -b binary -m i386 -D print --adjust-vma=0x3d400000 --start-address=0x3d400019 && echo strace -i ./print foobar; echo ret $?; exit
;; true.asm: Copyright (C) 2001 Brian Raiter <breadbox@muppetlabs.com>
;; Licensed under the terms of the GNU General Public License, either
;; version 2 or (at your option) any later version.
;;
;; To build:
;;	nasm -f bin -o true true.asm && chmod +x true
;;	ln true false

%define DEBUG 0
%define OPT 1

%include "regdump.mac"
%include "elf.mac"
%include "syscall.mac"

BITS 32
START equ _start - 3
;START equ s2

		org	0x3d5b9000
		ELF
ff:		mov	edi, [esp]
		push	edi
		;mov	bl, 10
		;xchg	eax, ebx
		setfz	edx, -1
		setfz	ecx, 4096
		;mov	ch, 0x10
		;mov	ch, al
		;xchg	ch, al
		;pop	ebx
		;setfz	bl, 10

	loopy:
	repne	scasb
		ELF_PHDR 1
		mov	-1[edi], byte 0xa
		dec	ecx
		;dbg_regdump
		jns	loopy
		;loop	loopy
		;xchg	eax, ebx
		;dec	esi
		;stosb
		;xchg	eax, ebx
		dbg_regdump

		%if OPT
		setfz	eax, SYS_write
		;setfz	ebx, 1
		;sub	bl, 9
		;mov	bl, 1
		pop	ecx
		int	0x80
		%else
		puts pop, -1
		%endif

		dbg_regdump

		%if 0
		%if OPT
		xchg	eax, ebx
		zero	ebx
		int	0x80
		%else
		exit
		%endif
		%endif
		

%include "regdump2.mac"

		%if 0
		add	al, 0x1
		mov	al, 0x1
		mov	ah, 0x1
		mov	ax, 0x1
		add	cl, 0x1
		mov	cl, 0x1
		mov	ch, 0x1
		sar	eax, 1
		sar	al, 1
		sar	eax, 1
		shr	eax, 12
		shr	eax, 12
		sal	eax, 1
		sal	eax, 12
		sar	eax, 1
		sar	eax, 12
		rol	eax, 12
		rol	eax, 1
		ror	eax, 12
		ror	eax, 1

		shr	ecx, 12
		shr	ecx, 12
		sal	ecx, 12
		sal	ecx, 12
		rol	ecx, 12
		ror	ecx, 12

		bts	ecx, 12
		bts	ecx, eax

		mov	eax, 0x1000
		mov	ecx, 0x1000
		set	ecx, 140
		set	ecx, 0x1000
		times 8	nop
		set	ecx, 0x100
		set	ecx, 0xff00
		set	ecx, 0x1001
		set	ecx, 127
		set	ecx, 128
		set	eax, 128
		zero	eax
		sub	al, -1
		add	al, -1
		lahf
		cpuid
		set	eax, 0xFFFF
		set	ebx, DEBUG
		mov	ax, 0xFFFF
		mov	bx, 0xFFFF

		;sub	esi, 8192
		dec	esi
		;inc	esi
		shl	esi, 13
		set	ebp, 0xffffe000
	%endif
